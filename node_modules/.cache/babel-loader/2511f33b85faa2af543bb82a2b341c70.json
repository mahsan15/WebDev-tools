{"ast":null,"code":"import _objectSpread from\"C:/Users/Ahsan/Desktop/react_Projects/webdev/web-developer-tools/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from\"react\";import{connect}from\"react-redux\";import{compose}from\"redux\";import PasswordGeneratorComponent from\"../../components/PasswordGenerator/PasswordGenerator\";import{setCheckedParam,setCopyToClipboardState,setPassword,setPasswordLength}from\"../../actions/PasswordGenerator/passwordGenerator\";import generatePassword from\"../../utils/generators/passwordGenerator\";import isChangeAllowed from\"../../utils/validators/passwordValidator\";import{jsx as _jsx}from\"react/jsx-runtime\";var PasswordGenerator=function PasswordGenerator(_ref){var result=_ref.result,checked=_ref.checked,passwordLength=_ref.passwordLength,copyToClipboardButtonState=_ref.copyToClipboardButtonState,setPasswordValue=_ref.setPasswordValue,setPasswordLengthValue=_ref.setPasswordLengthValue,setChecked=_ref.setChecked,setCopyToClipboardButtonState=_ref.setCopyToClipboardButtonState;if(result===''){setPasswordValue(generatePassword(passwordLength,checked));}var onCheckboxChange=function onCheckboxChange(event){var newCheckboxesState=_objectSpread({},checked);newCheckboxesState[event.target.name]=event.target.checked;if(isChangeAllowed(newCheckboxesState)){setChecked(newCheckboxesState);setPasswordValue(generatePassword(passwordLength,newCheckboxesState));}setCopyToClipboardButtonState('default');};var onPasswordLengthChange=function onPasswordLengthChange(event){setPasswordLengthValue(event.value);setCopyToClipboardButtonState('default');if(event.value!==passwordLength){setPasswordValue(generatePassword(event.value,checked));}};var onCopyButtonClick=function onCopyButtonClick(){navigator.clipboard.writeText(result);setCopyToClipboardButtonState('pressed');};var onGenerateButtonClick=function onGenerateButtonClick(){setPasswordValue(generatePassword(passwordLength,checked));setCopyToClipboardButtonState('default');};return/*#__PURE__*/_jsx(PasswordGeneratorComponent,{result:result,checked:checked,passwordLength:passwordLength,copyToClipboardButtonState:copyToClipboardButtonState,onCopyButtonClick:onCopyButtonClick,onGenerateButtonClick:onGenerateButtonClick,onCheckboxChange:onCheckboxChange,onPasswordLengthChange:onPasswordLengthChange});};var mapStateToProps=function mapStateToProps(state){return{result:state.passwordGenerator.result,checked:state.passwordGenerator.checked,passwordLength:state.passwordGenerator.passwordLength,copyToClipboardButtonState:state.passwordGenerator.copyToClipboardButtonState};};export default compose(connect(mapStateToProps,{setPasswordValue:setPassword,setPasswordLengthValue:setPasswordLength,setChecked:setCheckedParam,setCopyToClipboardButtonState:setCopyToClipboardState}))(PasswordGenerator);","map":{"version":3,"names":["React","connect","compose","PasswordGeneratorComponent","setCheckedParam","setCopyToClipboardState","setPassword","setPasswordLength","generatePassword","isChangeAllowed","PasswordGenerator","result","checked","passwordLength","copyToClipboardButtonState","setPasswordValue","setPasswordLengthValue","setChecked","setCopyToClipboardButtonState","onCheckboxChange","event","newCheckboxesState","target","name","onPasswordLengthChange","value","onCopyButtonClick","navigator","clipboard","writeText","onGenerateButtonClick","mapStateToProps","state","passwordGenerator"],"sources":["C:/Users/Ahsan/Desktop/react_Projects/webdev/web-developer-tools/src/containers/PasswordGenerator/PasswordGenerator.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport PasswordGeneratorComponent\r\n    from \"../../components/PasswordGenerator/PasswordGenerator\";\r\nimport {\r\n    setCheckedParam, setCopyToClipboardState, setPassword, setPasswordLength\r\n} from \"../../actions/PasswordGenerator/passwordGenerator\";\r\nimport generatePassword from \"../../utils/generators/passwordGenerator\";\r\nimport {\r\n    CheckboxesType,\r\n    PasswordGeneratorContainerStateInterface\r\n} from \"../../types/passwordGenerator\";\r\nimport isChangeAllowed from \"../../utils/validators/passwordValidator\";\r\n\r\nconst PasswordGenerator = ({\r\n                               result,\r\n                               checked,\r\n                               passwordLength,\r\n                               copyToClipboardButtonState,\r\n                               setPasswordValue,\r\n                               setPasswordLengthValue,\r\n                               setChecked,\r\n                               setCopyToClipboardButtonState\r\n                           }: PasswordGeneratorContainerStateInterface) => {\r\n\r\n    if (result === '') {\r\n        setPasswordValue(generatePassword(passwordLength, checked))\r\n    }\r\n\r\n    const onCheckboxChange = (event: { target: { name: string; checked: boolean } }) => {\r\n        const newCheckboxesState: CheckboxesType = {...checked};\r\n        newCheckboxesState[event.target.name] = event.target.checked;\r\n        if (isChangeAllowed(newCheckboxesState)) {\r\n            setChecked(newCheckboxesState);\r\n            setPasswordValue(generatePassword(passwordLength, newCheckboxesState));\r\n        }\r\n        setCopyToClipboardButtonState('default');\r\n    }\r\n\r\n    const onPasswordLengthChange = (event: { value: string; }) => {\r\n        setPasswordLengthValue(event.value);\r\n        setCopyToClipboardButtonState('default');\r\n        if (event.value !== passwordLength) {\r\n            setPasswordValue(generatePassword(event.value, checked));\r\n        }\r\n    }\r\n\r\n    const onCopyButtonClick = () => {\r\n        navigator.clipboard.writeText(result);\r\n        setCopyToClipboardButtonState('pressed');\r\n    }\r\n\r\n    const onGenerateButtonClick = () => {\r\n        setPasswordValue(generatePassword(passwordLength, checked));\r\n        setCopyToClipboardButtonState('default');\r\n    }\r\n\r\n    return <PasswordGeneratorComponent\r\n        result={result}\r\n        checked={checked}\r\n        passwordLength={passwordLength}\r\n        copyToClipboardButtonState={copyToClipboardButtonState}\r\n        onCopyButtonClick={onCopyButtonClick}\r\n        onGenerateButtonClick={onGenerateButtonClick}\r\n        onCheckboxChange={onCheckboxChange}\r\n        onPasswordLengthChange={onPasswordLengthChange}\r\n    />\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    result: state.passwordGenerator.result,\r\n    checked: state.passwordGenerator.checked,\r\n    passwordLength: state.passwordGenerator.passwordLength,\r\n    copyToClipboardButtonState: state.passwordGenerator.copyToClipboardButtonState,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setPasswordValue: setPassword,\r\n        setPasswordLengthValue: setPasswordLength,\r\n        setChecked: setCheckedParam,\r\n        setCopyToClipboardButtonState: setCopyToClipboardState\r\n    }))(PasswordGenerator);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}