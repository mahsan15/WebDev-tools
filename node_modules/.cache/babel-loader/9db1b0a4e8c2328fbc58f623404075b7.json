{"ast":null,"code":"import React,{useEffect}from\"react\";import{connect}from\"react-redux\";import{compose}from\"redux\";import CurrentEpoch from\"../../components/EpochConverter/CurrentEpochTime\";import{getCurrentUnixTime}from\"../../utils/calculators/epochConverter\";import{setCurrentUnixTime,setCopyToClipboardButtonState}from\"../../actions/EpochConverter/currentEpochTime\";import{jsx as _jsx}from\"react/jsx-runtime\";var CurrentEpochTime=function CurrentEpochTime(_ref){var currentUnixTime=_ref.currentUnixTime,copyToClipboardButtonState=_ref.copyToClipboardButtonState,setCurrentUnixTimeValue=_ref.setCurrentUnixTimeValue,setCopyToClipboardState=_ref.setCopyToClipboardState;useEffect(function(){if(currentUnixTime===''){setCurrentUnixTimeValue(getCurrentUnixTime());}var secTimer=setInterval(function(){setCurrentUnixTimeValue(getCurrentUnixTime());if(Number(getCurrentUnixTime())%5===0){setCopyToClipboardState('default');}},1000);return function(){return clearInterval(secTimer);};},[currentUnixTime,setCopyToClipboardState,setCurrentUnixTimeValue]);var copyToClipboard=function copyToClipboard(){navigator.clipboard.writeText(currentUnixTime);setCopyToClipboardState('pressed');};return/*#__PURE__*/_jsx(CurrentEpoch,{currentUnixTime:currentUnixTime,copyToClipboard:copyToClipboard,copyToClipboardButtonState:copyToClipboardButtonState});};var mapStateToProps=function mapStateToProps(state){return{currentUnixTime:state.epochConverter.currentEpochTime.currentUnixTime,copyToClipboardButtonState:state.epochConverter.currentEpochTime.copyToClipboardButtonState};};export default compose(connect(mapStateToProps,{setCurrentUnixTimeValue:setCurrentUnixTime,setCopyToClipboardState:setCopyToClipboardButtonState}))(CurrentEpochTime);","map":{"version":3,"names":["React","useEffect","connect","compose","CurrentEpoch","getCurrentUnixTime","setCurrentUnixTime","setCopyToClipboardButtonState","CurrentEpochTime","currentUnixTime","copyToClipboardButtonState","setCurrentUnixTimeValue","setCopyToClipboardState","secTimer","setInterval","Number","clearInterval","copyToClipboard","navigator","clipboard","writeText","mapStateToProps","state","epochConverter","currentEpochTime"],"sources":["C:/Users/Ahsan/Desktop/react_Projects/webdev/web-developer-tools/src/containers/EpochConverter/CurrentEpochTime.tsx"],"sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport CurrentEpoch\r\n    from \"../../components/EpochConverter/CurrentEpochTime\";\r\nimport {getCurrentUnixTime} from \"../../utils/calculators/epochConverter\";\r\nimport {\r\n    setCurrentUnixTime,\r\n    setCopyToClipboardButtonState\r\n} from \"../../actions/EpochConverter/currentEpochTime\"\r\nimport {\r\n    CurrentEpochTimeContainerPropsInterface,\r\n    CurrentEpochTimeContainerState\r\n} from \"../../types/epochConverter\";\r\n\r\nconst CurrentEpochTime = ({\r\n                              currentUnixTime,\r\n                              copyToClipboardButtonState,\r\n                              setCurrentUnixTimeValue,\r\n                              setCopyToClipboardState\r\n                          }: CurrentEpochTimeContainerPropsInterface) => {\r\n\r\n    useEffect(() => {\r\n        if (currentUnixTime === '') {\r\n            setCurrentUnixTimeValue(getCurrentUnixTime());\r\n        }\r\n\r\n        const secTimer = setInterval(() => {\r\n            setCurrentUnixTimeValue(getCurrentUnixTime());\r\n            if (Number(getCurrentUnixTime()) % 5 === 0) {\r\n                setCopyToClipboardState('default');\r\n            }\r\n        }, 1000)\r\n\r\n        return () => clearInterval(secTimer);\r\n    }, [currentUnixTime, setCopyToClipboardState, setCurrentUnixTimeValue]);\r\n\r\n    const copyToClipboard = () => {\r\n        navigator.clipboard.writeText(currentUnixTime);\r\n        setCopyToClipboardState('pressed')\r\n    }\r\n\r\n    return <CurrentEpoch currentUnixTime={currentUnixTime}\r\n                         copyToClipboard={copyToClipboard}\r\n                         copyToClipboardButtonState={copyToClipboardButtonState}\r\n    />\r\n}\r\n\r\nconst mapStateToProps = (state: { epochConverter: { currentEpochTime: CurrentEpochTimeContainerState } }) => ({\r\n    currentUnixTime: state.epochConverter.currentEpochTime.currentUnixTime,\r\n    copyToClipboardButtonState: state.epochConverter.currentEpochTime.copyToClipboardButtonState,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setCurrentUnixTimeValue: setCurrentUnixTime,\r\n        setCopyToClipboardState: setCopyToClipboardButtonState,\r\n    }))(CurrentEpochTime);\r\n"],"mappings":"AAAA,MAAOA,MAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,OAAR,KAAsB,OAAtB,CACA,MAAOC,aAAP,KACS,kDADT,CAEA,OAAQC,kBAAR,KAAiC,wCAAjC,CACA,OACIC,kBADJ,CAEIC,6BAFJ,KAGO,+CAHP,C,2CASA,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAmB,MAKgD,IAJ3CC,gBAI2C,MAJ3CA,eAI2C,CAH3CC,0BAG2C,MAH3CA,0BAG2C,CAF3CC,uBAE2C,MAF3CA,uBAE2C,CAD3CC,uBAC2C,MAD3CA,uBAC2C,CAErEX,SAAS,CAAC,UAAM,CACZ,GAAIQ,eAAe,GAAK,EAAxB,CAA4B,CACxBE,uBAAuB,CAACN,kBAAkB,EAAnB,CAAvB,CACH,CAED,GAAMQ,SAAQ,CAAGC,WAAW,CAAC,UAAM,CAC/BH,uBAAuB,CAACN,kBAAkB,EAAnB,CAAvB,CACA,GAAIU,MAAM,CAACV,kBAAkB,EAAnB,CAAN,CAA+B,CAA/B,GAAqC,CAAzC,CAA4C,CACxCO,uBAAuB,CAAC,SAAD,CAAvB,CACH,CACJ,CAL2B,CAKzB,IALyB,CAA5B,CAOA,MAAO,kBAAMI,cAAa,CAACH,QAAD,CAAnB,EAAP,CACH,CAbQ,CAaN,CAACJ,eAAD,CAAkBG,uBAAlB,CAA2CD,uBAA3C,CAbM,CAAT,CAeA,GAAMM,gBAAe,CAAG,QAAlBA,gBAAkB,EAAM,CAC1BC,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BX,eAA9B,EACAG,uBAAuB,CAAC,SAAD,CAAvB,CACH,CAHD,CAKA,mBAAO,KAAC,YAAD,EAAc,eAAe,CAAEH,eAA/B,CACc,eAAe,CAAEQ,eAD/B,CAEc,0BAA0B,CAAEP,0BAF1C,EAAP,CAIH,CA/BD,CAiCA,GAAMW,gBAAe,CAAG,QAAlBA,gBAAkB,CAACC,KAAD,QAAsF,CAC1Gb,eAAe,CAAEa,KAAK,CAACC,cAAN,CAAqBC,gBAArB,CAAsCf,eADmD,CAE1GC,0BAA0B,CAAEY,KAAK,CAACC,cAAN,CAAqBC,gBAArB,CAAsCd,0BAFwC,CAAtF,EAAxB,CAKA,cAAeP,QAAO,CAClBD,OAAO,CAACmB,eAAD,CAAkB,CACrBV,uBAAuB,CAAEL,kBADJ,CAErBM,uBAAuB,CAAEL,6BAFJ,CAAlB,CADW,CAAP,CAIPC,gBAJO,CAAf"},"metadata":{},"sourceType":"module"}