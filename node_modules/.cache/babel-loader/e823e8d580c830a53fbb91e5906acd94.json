{"ast":null,"code":"import isEmailValid from \"../validators/emailValidator\";\n\nconst map = require('./map.json');\n\nexport const isNumeric = string => /^-?\\d+$/.test(string);\nexport const wordToNumber = string => {\n  if (isNumeric(string)) {\n    return string;\n  } // @ts-ignore\n\n\n  return map[string];\n};\n\nconst getRanges = array => {\n  const ranges = [];\n  let start;\n  let end;\n\n  for (let i = 0; i < array.length; i += 1) {\n    start = array[i];\n    end = start;\n\n    while (array[i + 1] - array[i] === 1) {\n      end = array[i + 1];\n      i += 1;\n    }\n\n    ranges.push(start === end ? `${start}` : `${start}-${end}`);\n  }\n\n  return ranges;\n};\n\nexport const groupNumbers = array => {\n  const arrayOfNumbers = array.map(number => parseInt(number, 10));\n  arrayOfNumbers.sort((a, b) => a - b);\n  return getRanges(arrayOfNumbers);\n};\n\nconst transformOptions = optionValue => {\n  const array = optionValue.map(item => wordToNumber(item.code));\n  return groupNumbers(array).toString();\n};\n\nexport const transformPeriod = (radioButtonValue, optionValue) => {\n  if (!['Minutes', 'Hours', 'Days', 'Months', 'Weekday'].includes(radioButtonValue)) {\n    // @ts-ignore\n    return map[radioButtonValue];\n  }\n\n  if (optionValue.length === 0) {\n    return '';\n  }\n\n  return transformOptions(optionValue);\n};\nexport const transform = (minutesRadio, minutesOptions, hoursRadio, hoursOptions, daysRadio, daysOptions, monthsRadio, monthsOptions, weekdayRadio, weekdayOptions, command, output, path, email) => {\n  const minutes = transformPeriod(minutesRadio, minutesOptions);\n  const hours = transformPeriod(hoursRadio, hoursOptions);\n  const days = transformPeriod(daysRadio, daysOptions);\n  const months = transformPeriod(monthsRadio, monthsOptions);\n  const weekday = transformPeriod(weekdayRadio, weekdayOptions);\n  if (!minutes) return 'Invalid Minutes';\n  if (!hours) return 'Invalid Hours';\n  if (!days) return 'Invalid Days';\n  if (!months) return 'Invalid Months';\n  if (!weekday) return 'Invalid Weekday';\n  if (!command) return 'Invalid Command';\n  if (!isEmailValid(email) && output === 'email') return 'Invalid Email';\n  if (!path && output === 'file') return 'Invalid Path';\n  let wayToHandleOutput;\n\n  if (output === 'mute') {\n    wayToHandleOutput = '>/dev/null 2>&1';\n  } else if (output === 'file') {\n    wayToHandleOutput = `> ${path}`;\n  } else if (output === 'email') {\n    wayToHandleOutput = `MAILTO=\"${email}\"\n        `;\n  }\n\n  const expression = `${output === 'email' ? wayToHandleOutput : ''} ` + `${minutes} ${hours} ${days} ${months} ${weekday} ` + `${command} ${output !== 'email' ? wayToHandleOutput : ''}`;\n  return expression.trim();\n};\nexport default transform;","map":{"version":3,"names":["isEmailValid","map","require","isNumeric","string","test","wordToNumber","getRanges","array","ranges","start","end","i","length","push","groupNumbers","arrayOfNumbers","number","parseInt","sort","a","b","transformOptions","optionValue","item","code","toString","transformPeriod","radioButtonValue","includes","transform","minutesRadio","minutesOptions","hoursRadio","hoursOptions","daysRadio","daysOptions","monthsRadio","monthsOptions","weekdayRadio","weekdayOptions","command","output","path","email","minutes","hours","days","months","weekday","wayToHandleOutput","expression","trim"],"sources":["C:/Users/Ahsan/Desktop/react_Projects/webdev/webdev/src/utils/transformers/humanReadableToCrontab.ts"],"sourcesContent":["import {MultiselectOption} from \"../../types/crontabGenerator\";\r\nimport isEmailValid from \"../validators/emailValidator\";\r\n\r\nconst map = require('./map.json');\r\n\r\nexport const isNumeric = (string: string): boolean => /^-?\\d+$/.test(string)\r\n\r\nexport const wordToNumber = (string: string): string => {\r\n    if (isNumeric(string)) {\r\n        return string;\r\n    }\r\n\r\n    // @ts-ignore\r\n    return map[string];\r\n}\r\n\r\nconst getRanges = (array: any[]): any[] => {\r\n    const ranges = [];\r\n    let start;\r\n    let end;\r\n    for (let i = 0; i < array.length; i += 1) {\r\n        start = array[i];\r\n        end = start;\r\n        while (array[i + 1] - array[i] === 1) {\r\n            end = array[i + 1];\r\n            i += 1;\r\n        }\r\n        ranges.push(start === end ? `${start}` : `${start}-${end}`);\r\n    }\r\n    return ranges;\r\n}\r\n\r\nexport const groupNumbers = (array: string[]): any[] => {\r\n\r\n    const arrayOfNumbers = array.map(number => parseInt(number, 10))\r\n\r\n    arrayOfNumbers.sort((a, b) => a - b);\r\n\r\n    return getRanges(arrayOfNumbers);\r\n}\r\n\r\nconst transformOptions = (optionValue: MultiselectOption[]): string => {\r\n\r\n    const array: string[] = optionValue.map(item => wordToNumber(item.code));\r\n\r\n    return groupNumbers(array).toString();\r\n}\r\n\r\nexport const transformPeriod = (radioButtonValue: string, optionValue: any[]): string => {\r\n\r\n    if (!['Minutes', 'Hours', 'Days', 'Months', 'Weekday'].includes(radioButtonValue)) {\r\n        // @ts-ignore\r\n        return map[radioButtonValue];\r\n    }\r\n\r\n    if (optionValue.length === 0) {\r\n        return '';\r\n    }\r\n\r\n    return transformOptions(optionValue);\r\n}\r\n\r\nexport const transform = (\r\n    minutesRadio: string,\r\n    minutesOptions: any[],\r\n    hoursRadio: string,\r\n    hoursOptions: any[],\r\n    daysRadio: string,\r\n    daysOptions: any[],\r\n    monthsRadio: string,\r\n    monthsOptions: any[],\r\n    weekdayRadio: string,\r\n    weekdayOptions: any[],\r\n    command: string,\r\n    output: string,\r\n    path: string,\r\n    email: string\r\n): string => {\r\n    const minutes = transformPeriod(minutesRadio, minutesOptions);\r\n    const hours = transformPeriod(hoursRadio, hoursOptions);\r\n    const days = transformPeriod(daysRadio, daysOptions);\r\n    const months = transformPeriod(monthsRadio, monthsOptions);\r\n    const weekday = transformPeriod(weekdayRadio, weekdayOptions);\r\n\r\n    if (!minutes) return 'Invalid Minutes';\r\n    if (!hours) return 'Invalid Hours';\r\n    if (!days) return 'Invalid Days';\r\n    if (!months) return 'Invalid Months';\r\n    if (!weekday) return 'Invalid Weekday';\r\n    if (!command) return 'Invalid Command';\r\n    if (!isEmailValid(email) && output === 'email') return 'Invalid Email';\r\n    if (!path && output === 'file') return 'Invalid Path';\r\n\r\n    let wayToHandleOutput;\r\n\r\n    if (output === 'mute') {\r\n        wayToHandleOutput = '>/dev/null 2>&1';\r\n    } else if (output === 'file') {\r\n        wayToHandleOutput = `> ${path}`;\r\n    } else if (output === 'email') {\r\n        wayToHandleOutput = `MAILTO=\"${email}\"\r\n        `;\r\n    }\r\n\r\n    const expression = `${output === 'email' ? wayToHandleOutput : ''} ` +\r\n        `${minutes} ${hours} ${days} ${months} ${weekday} ` +\r\n        `${command} ${output !== 'email' ? wayToHandleOutput : ''}`;\r\n\r\n    return expression.trim()\r\n}\r\n\r\nexport default transform;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}