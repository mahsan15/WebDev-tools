{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahsan\\\\Desktop\\\\react_Projects\\\\webdev\\\\webdev\\\\src\\\\containers\\\\ChmodCalculator\\\\ChmodCalculator.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { checkboxesToChmodNumber, chmodNumberToString, chmodStringToCheckboxes } from \"../../utils/calculators/chmodCalculator\";\nimport { setChecked, setNumberFieldValue, setTextFieldValue } from \"../../actions/ChmodCalculator/chmodCalculator\";\nimport { isNumberValid, isStringValid } from \"../../utils/validators/chmodValidator\";\nimport Calculator from \"../../components/ChmodCalculator/ChmodCalculator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChmodCalculator = _ref => {\n  let {\n    checked,\n    numberFieldValue,\n    textFieldValue,\n    setCheckedValue,\n    setNumberValue,\n    setTextValue\n  } = _ref;\n\n  const onCheckboxChange = event => {\n    const newCheckboxesState = { ...checked\n    };\n    newCheckboxesState[event.target.id] = event.target.checked; // Update state\n\n    setCheckedValue(newCheckboxesState);\n    setNumberValue(checkboxesToChmodNumber(newCheckboxesState));\n    setTextValue(chmodNumberToString(checkboxesToChmodNumber(newCheckboxesState)));\n  };\n\n  const onNumberChange = _ref2 => {\n    let {\n      target: {\n        value\n      }\n    } = _ref2;\n\n    if (!isNumberValid(value)) {\n      return;\n    }\n\n    setNumberValue(value);\n\n    if (value.length === 3) {\n      const newCheckboxState = chmodStringToCheckboxes(chmodNumberToString(value));\n      setCheckedValue(newCheckboxState);\n      setTextValue(chmodNumberToString(value));\n    }\n  };\n\n  const onTextChange = _ref3 => {\n    let {\n      target: {\n        value\n      }\n    } = _ref3;\n\n    if (!isStringValid(value)) {\n      return;\n    }\n\n    setTextValue(value);\n\n    if (value.length === 9) {\n      const nexCheckboxState = chmodStringToCheckboxes(value);\n      setCheckedValue(nexCheckboxState);\n      setNumberValue(checkboxesToChmodNumber(nexCheckboxState));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Calculator, {\n    checked: checked,\n    numberFieldValue: numberFieldValue,\n    textFieldValue: textFieldValue,\n    onCheckboxChange: onCheckboxChange,\n    onNumberChange: onNumberChange,\n    onTextChange: onTextChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 12\n  }, this);\n};\n\n_c = ChmodCalculator;\n\nconst mapStateToProps = state => ({\n  checked: state.chmodCalculator.checked,\n  numberFieldValue: state.chmodCalculator.numberFieldValue,\n  textFieldValue: state.chmodCalculator.textFieldValue\n});\n\nexport default compose(connect(mapStateToProps, {\n  setCheckedValue: setChecked,\n  setNumberValue: setNumberFieldValue,\n  setTextValue: setTextFieldValue\n}))(ChmodCalculator);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChmodCalculator\");","map":{"version":3,"names":["React","connect","compose","checkboxesToChmodNumber","chmodNumberToString","chmodStringToCheckboxes","setChecked","setNumberFieldValue","setTextFieldValue","isNumberValid","isStringValid","Calculator","ChmodCalculator","checked","numberFieldValue","textFieldValue","setCheckedValue","setNumberValue","setTextValue","onCheckboxChange","event","newCheckboxesState","target","id","onNumberChange","value","length","newCheckboxState","onTextChange","nexCheckboxState","mapStateToProps","state","chmodCalculator"],"sources":["C:/Users/Ahsan/Desktop/react_Projects/webdev/webdev/src/containers/ChmodCalculator/ChmodCalculator.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    checkboxesToChmodNumber,\r\n    chmodNumberToString,\r\n    chmodStringToCheckboxes\r\n} from \"../../utils/calculators/chmodCalculator\";\r\nimport {setChecked, setNumberFieldValue, setTextFieldValue} from \"../../actions/ChmodCalculator/chmodCalculator\";\r\nimport {isNumberValid, isStringValid} from \"../../utils/validators/chmodValidator\";\r\nimport Calculator from \"../../components/ChmodCalculator/ChmodCalculator\";\r\nimport {\r\n    CheckboxesType,\r\n    ChmodCalculatorContainerPropsInterface,\r\n    ChmodCalculatorContainerStateType\r\n} from \"../../types/chmodCalculator\";\r\n\r\nconst ChmodCalculator = ({\r\n                             checked, numberFieldValue, textFieldValue,\r\n                             setCheckedValue, setNumberValue, setTextValue\r\n                         }: ChmodCalculatorContainerPropsInterface) => {\r\n\r\n    const onCheckboxChange = (event: { target: { id: string; checked: boolean } }) => {\r\n\r\n        const newCheckboxesState: CheckboxesType = {...checked};\r\n        newCheckboxesState[event.target.id] = event.target.checked;\r\n\r\n        // Update state\r\n        setCheckedValue(newCheckboxesState);\r\n        setNumberValue(checkboxesToChmodNumber(newCheckboxesState));\r\n        setTextValue(chmodNumberToString(checkboxesToChmodNumber(newCheckboxesState)));\r\n    }\r\n\r\n    const onNumberChange = ({target: {value}}: { target: { value: string } }) => {\r\n        if (!isNumberValid(value)) {\r\n            return;\r\n        }\r\n\r\n        setNumberValue(value);\r\n\r\n        if (value.length === 3) {\r\n            const newCheckboxState = chmodStringToCheckboxes(chmodNumberToString(value));\r\n            setCheckedValue(newCheckboxState);\r\n            setTextValue(chmodNumberToString(value));\r\n        }\r\n    }\r\n\r\n    const onTextChange = ({target: {value}}: { target: { value: string } }) => {\r\n        if (!isStringValid(value)) {\r\n            return;\r\n        }\r\n\r\n        setTextValue(value);\r\n\r\n        if (value.length === 9) {\r\n            const nexCheckboxState = chmodStringToCheckboxes(value);\r\n            setCheckedValue(nexCheckboxState);\r\n            setNumberValue(checkboxesToChmodNumber(nexCheckboxState));\r\n        }\r\n    }\r\n\r\n    return <Calculator\r\n        checked={checked}\r\n        numberFieldValue={numberFieldValue}\r\n        textFieldValue={textFieldValue}\r\n        onCheckboxChange={onCheckboxChange}\r\n        onNumberChange={onNumberChange}\r\n        onTextChange={onTextChange}\r\n    />\r\n}\r\n\r\nconst mapStateToProps = (state: { chmodCalculator: ChmodCalculatorContainerStateType }) => ({\r\n    checked: state.chmodCalculator.checked,\r\n    numberFieldValue: state.chmodCalculator.numberFieldValue,\r\n    textFieldValue: state.chmodCalculator.textFieldValue,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setCheckedValue: setChecked,\r\n        setNumberValue: setNumberFieldValue,\r\n        setTextValue: setTextFieldValue\r\n    }))(ChmodCalculator);\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SACIC,uBADJ,EAEIC,mBAFJ,EAGIC,uBAHJ,QAIO,yCAJP;AAKA,SAAQC,UAAR,EAAoBC,mBAApB,EAAyCC,iBAAzC,QAAiE,+CAAjE;AACA,SAAQC,aAAR,EAAuBC,aAAvB,QAA2C,uCAA3C;AACA,OAAOC,UAAP,MAAuB,kDAAvB;;;AAOA,MAAMC,eAAe,GAAG,QAG+C;EAAA,IAH9C;IACIC,OADJ;IACaC,gBADb;IAC+BC,cAD/B;IAEIC,eAFJ;IAEqBC,cAFrB;IAEqCC;EAFrC,CAG8C;;EAEnE,MAAMC,gBAAgB,GAAIC,KAAD,IAAyD;IAE9E,MAAMC,kBAAkC,GAAG,EAAC,GAAGR;IAAJ,CAA3C;IACAQ,kBAAkB,CAACD,KAAK,CAACE,MAAN,CAAaC,EAAd,CAAlB,GAAsCH,KAAK,CAACE,MAAN,CAAaT,OAAnD,CAH8E,CAK9E;;IACAG,eAAe,CAACK,kBAAD,CAAf;IACAJ,cAAc,CAACd,uBAAuB,CAACkB,kBAAD,CAAxB,CAAd;IACAH,YAAY,CAACd,mBAAmB,CAACD,uBAAuB,CAACkB,kBAAD,CAAxB,CAApB,CAAZ;EACH,CATD;;EAWA,MAAMG,cAAc,GAAG,SAAsD;IAAA,IAArD;MAACF,MAAM,EAAE;QAACG;MAAD;IAAT,CAAqD;;IACzE,IAAI,CAAChB,aAAa,CAACgB,KAAD,CAAlB,EAA2B;MACvB;IACH;;IAEDR,cAAc,CAACQ,KAAD,CAAd;;IAEA,IAAIA,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;MACpB,MAAMC,gBAAgB,GAAGtB,uBAAuB,CAACD,mBAAmB,CAACqB,KAAD,CAApB,CAAhD;MACAT,eAAe,CAACW,gBAAD,CAAf;MACAT,YAAY,CAACd,mBAAmB,CAACqB,KAAD,CAApB,CAAZ;IACH;EACJ,CAZD;;EAcA,MAAMG,YAAY,GAAG,SAAsD;IAAA,IAArD;MAACN,MAAM,EAAE;QAACG;MAAD;IAAT,CAAqD;;IACvE,IAAI,CAACf,aAAa,CAACe,KAAD,CAAlB,EAA2B;MACvB;IACH;;IAEDP,YAAY,CAACO,KAAD,CAAZ;;IAEA,IAAIA,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;MACpB,MAAMG,gBAAgB,GAAGxB,uBAAuB,CAACoB,KAAD,CAAhD;MACAT,eAAe,CAACa,gBAAD,CAAf;MACAZ,cAAc,CAACd,uBAAuB,CAAC0B,gBAAD,CAAxB,CAAd;IACH;EACJ,CAZD;;EAcA,oBAAO,QAAC,UAAD;IACH,OAAO,EAAEhB,OADN;IAEH,gBAAgB,EAAEC,gBAFf;IAGH,cAAc,EAAEC,cAHb;IAIH,gBAAgB,EAAEI,gBAJf;IAKH,cAAc,EAAEK,cALb;IAMH,YAAY,EAAEI;EANX;IAAA;IAAA;IAAA;EAAA,QAAP;AAQH,CApDD;;KAAMhB,e;;AAsDN,MAAMkB,eAAe,GAAIC,KAAD,KAAoE;EACxFlB,OAAO,EAAEkB,KAAK,CAACC,eAAN,CAAsBnB,OADyD;EAExFC,gBAAgB,EAAEiB,KAAK,CAACC,eAAN,CAAsBlB,gBAFgD;EAGxFC,cAAc,EAAEgB,KAAK,CAACC,eAAN,CAAsBjB;AAHkD,CAApE,CAAxB;;AAMA,eAAeb,OAAO,CAClBD,OAAO,CAAC6B,eAAD,EAAkB;EACrBd,eAAe,EAAEV,UADI;EAErBW,cAAc,EAAEV,mBAFK;EAGrBW,YAAY,EAAEV;AAHO,CAAlB,CADW,CAAP,CAKPI,eALO,CAAf"},"metadata":{},"sourceType":"module"}