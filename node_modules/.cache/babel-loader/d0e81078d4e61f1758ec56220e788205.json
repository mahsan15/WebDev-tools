{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahsan\\\\Desktop\\\\react_Projects\\\\webdev\\\\web-developer-tools\\\\src\\\\containers\\\\EpochConverter\\\\DateTimeForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { humanReadableDateToEpoch } from \"../../utils/calculators/epochConverter\";\nimport DateTimeFormComponent from \"../../components/EpochConverter/Forms/DateTimeForm\";\nimport { setDateTimeInputValue, setTimezoneInputValue, setDateToEpochResult } from \"../../actions/EpochConverter/dateTimeForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DateTimeForm = _ref => {\n  _s();\n\n  let {\n    dateTimeInputValue,\n    timezoneInputValue,\n    dateToEpochResult,\n    setDateTimeInput,\n    setTimezoneInput,\n    setDateToEpochResultValue\n  } = _ref;\n  useEffect(() => {\n    if (!dateTimeInputValue) {\n      setDateTimeInput(Date());\n    }\n  }, [dateTimeInputValue, setDateTimeInput]);\n\n  const onDateTimeChange = _ref2 => {\n    let {\n      target: {\n        value\n      }\n    } = _ref2;\n    setDateTimeInput(value ? value.toString() : null);\n\n    if (value === null || value === undefined) {\n      setDateToEpochResultValue('');\n    } else if (dateToEpochResult !== '') {\n      setDateToEpochResultValue(humanReadableDateToEpoch(value.toString(), timezoneInputValue));\n    }\n  };\n\n  const onTimezoneChange = _ref3 => {\n    let {\n      target: {\n        value\n      }\n    } = _ref3;\n    setTimezoneInput(value);\n\n    if (dateToEpochResult && dateTimeInputValue) {\n      setDateToEpochResultValue(humanReadableDateToEpoch(dateTimeInputValue.toString(), value));\n    }\n  };\n\n  const onDateToEpochButtonClick = () => {\n    if (dateTimeInputValue) {\n      setDateToEpochResultValue(humanReadableDateToEpoch(dateTimeInputValue.toString(), timezoneInputValue));\n    } else {\n      setDateToEpochResultValue('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(DateTimeFormComponent, {\n    dateTimeInputValue: new Date(dateTimeInputValue),\n    timezoneInputValue: timezoneInputValue,\n    onDateTimeChange: onDateTimeChange,\n    onTimezoneChange: onTimezoneChange,\n    onDateToEpochButtonClick: onDateToEpochButtonClick,\n    dateToEpochResult: dateToEpochResult\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 12\n  }, this);\n};\n\n_s(DateTimeForm, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = DateTimeForm;\n\nconst mapStateToProps = state => ({\n  dateTimeInputValue: state.epochConverter.dateTimeForm.dateTimeInputValue,\n  timezoneInputValue: state.epochConverter.dateTimeForm.timezoneInputValue,\n  dateToEpochResult: state.epochConverter.dateTimeForm.dateToEpochResult\n});\n\nexport default compose(connect(mapStateToProps, {\n  setDateTimeInput: setDateTimeInputValue,\n  setTimezoneInput: setTimezoneInputValue,\n  setDateToEpochResultValue: setDateToEpochResult\n}))(DateTimeForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"DateTimeForm\");","map":{"version":3,"names":["React","useEffect","connect","compose","humanReadableDateToEpoch","DateTimeFormComponent","setDateTimeInputValue","setTimezoneInputValue","setDateToEpochResult","DateTimeForm","dateTimeInputValue","timezoneInputValue","dateToEpochResult","setDateTimeInput","setTimezoneInput","setDateToEpochResultValue","Date","onDateTimeChange","target","value","toString","undefined","onTimezoneChange","onDateToEpochButtonClick","mapStateToProps","state","epochConverter","dateTimeForm"],"sources":["C:/Users/Ahsan/Desktop/react_Projects/webdev/web-developer-tools/src/containers/EpochConverter/DateTimeForm.tsx"],"sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {humanReadableDateToEpoch} from \"../../utils/calculators/epochConverter\";\r\nimport DateTimeFormComponent\r\n    from \"../../components/EpochConverter/Forms/DateTimeForm\"\r\nimport {\r\n    setDateTimeInputValue,\r\n    setTimezoneInputValue,\r\n    setDateToEpochResult\r\n} from \"../../actions/EpochConverter/dateTimeForm\"\r\nimport {\r\n    DateTimeFormContainerPropsInterface,\r\n    DateTimeFormState\r\n} from \"../../types/epochConverter\";\r\n\r\nconst DateTimeForm = ({\r\n                          dateTimeInputValue,\r\n                          timezoneInputValue,\r\n                          dateToEpochResult,\r\n                          setDateTimeInput,\r\n                          setTimezoneInput,\r\n                          setDateToEpochResultValue\r\n                      }: DateTimeFormContainerPropsInterface) => {\r\n\r\n    useEffect(() => {\r\n        if (!dateTimeInputValue) {\r\n            setDateTimeInput(Date());\r\n        }\r\n    }, [dateTimeInputValue, setDateTimeInput]);\r\n\r\n    const onDateTimeChange = ({target: {value}}: { target: { value: string } }) => {\r\n        setDateTimeInput(value ? value.toString() : null);\r\n\r\n        if (value === null || value === undefined) {\r\n            setDateToEpochResultValue('');\r\n        } else if (dateToEpochResult !== '') {\r\n            setDateToEpochResultValue(humanReadableDateToEpoch(value.toString(), timezoneInputValue));\r\n        }\r\n    }\r\n\r\n    const onTimezoneChange = ({target: {value}}: { target: { value: 'gmt' | 'local' } }) => {\r\n        setTimezoneInput(value);\r\n        if (dateToEpochResult && dateTimeInputValue) {\r\n            setDateToEpochResultValue(humanReadableDateToEpoch(dateTimeInputValue.toString(), value));\r\n        }\r\n    }\r\n\r\n    const onDateToEpochButtonClick = () => {\r\n        if (dateTimeInputValue) {\r\n            setDateToEpochResultValue(humanReadableDateToEpoch(dateTimeInputValue.toString(), timezoneInputValue));\r\n        } else {\r\n            setDateToEpochResultValue('');\r\n        }\r\n    }\r\n\r\n    return <DateTimeFormComponent dateTimeInputValue={new Date(dateTimeInputValue)}\r\n                                  timezoneInputValue={timezoneInputValue}\r\n                                  onDateTimeChange={onDateTimeChange}\r\n                                  onTimezoneChange={onTimezoneChange}\r\n                                  onDateToEpochButtonClick={onDateToEpochButtonClick}\r\n                                  dateToEpochResult={dateToEpochResult}\r\n    />\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: { epochConverter: { dateTimeForm: DateTimeFormState } }) => ({\r\n    dateTimeInputValue: state.epochConverter.dateTimeForm.dateTimeInputValue,\r\n    timezoneInputValue: state.epochConverter.dateTimeForm.timezoneInputValue,\r\n    dateToEpochResult: state.epochConverter.dateTimeForm.dateToEpochResult,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setDateTimeInput: setDateTimeInputValue,\r\n        setTimezoneInput: setTimezoneInputValue,\r\n        setDateToEpochResultValue: setDateToEpochResult,\r\n    }))(DateTimeForm);\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,wBAAR,QAAuC,wCAAvC;AACA,OAAOC,qBAAP,MACS,oDADT;AAEA,SACIC,qBADJ,EAEIC,qBAFJ,EAGIC,oBAHJ,QAIO,2CAJP;;;AAUA,MAAMC,YAAY,GAAG,QAO4C;EAAA;;EAAA,IAP3C;IACIC,kBADJ;IAEIC,kBAFJ;IAGIC,iBAHJ;IAIIC,gBAJJ;IAKIC,gBALJ;IAMIC;EANJ,CAO2C;EAE7Dd,SAAS,CAAC,MAAM;IACZ,IAAI,CAACS,kBAAL,EAAyB;MACrBG,gBAAgB,CAACG,IAAI,EAAL,CAAhB;IACH;EACJ,CAJQ,EAIN,CAACN,kBAAD,EAAqBG,gBAArB,CAJM,CAAT;;EAMA,MAAMI,gBAAgB,GAAG,SAAsD;IAAA,IAArD;MAACC,MAAM,EAAE;QAACC;MAAD;IAAT,CAAqD;IAC3EN,gBAAgB,CAACM,KAAK,GAAGA,KAAK,CAACC,QAAN,EAAH,GAAsB,IAA5B,CAAhB;;IAEA,IAAID,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKE,SAAhC,EAA2C;MACvCN,yBAAyB,CAAC,EAAD,CAAzB;IACH,CAFD,MAEO,IAAIH,iBAAiB,KAAK,EAA1B,EAA8B;MACjCG,yBAAyB,CAACX,wBAAwB,CAACe,KAAK,CAACC,QAAN,EAAD,EAAmBT,kBAAnB,CAAzB,CAAzB;IACH;EACJ,CARD;;EAUA,MAAMW,gBAAgB,GAAG,SAA+D;IAAA,IAA9D;MAACJ,MAAM,EAAE;QAACC;MAAD;IAAT,CAA8D;IACpFL,gBAAgB,CAACK,KAAD,CAAhB;;IACA,IAAIP,iBAAiB,IAAIF,kBAAzB,EAA6C;MACzCK,yBAAyB,CAACX,wBAAwB,CAACM,kBAAkB,CAACU,QAAnB,EAAD,EAAgCD,KAAhC,CAAzB,CAAzB;IACH;EACJ,CALD;;EAOA,MAAMI,wBAAwB,GAAG,MAAM;IACnC,IAAIb,kBAAJ,EAAwB;MACpBK,yBAAyB,CAACX,wBAAwB,CAACM,kBAAkB,CAACU,QAAnB,EAAD,EAAgCT,kBAAhC,CAAzB,CAAzB;IACH,CAFD,MAEO;MACHI,yBAAyB,CAAC,EAAD,CAAzB;IACH;EACJ,CAND;;EAQA,oBAAO,QAAC,qBAAD;IAAuB,kBAAkB,EAAE,IAAIC,IAAJ,CAASN,kBAAT,CAA3C;IACuB,kBAAkB,EAAEC,kBAD3C;IAEuB,gBAAgB,EAAEM,gBAFzC;IAGuB,gBAAgB,EAAEK,gBAHzC;IAIuB,wBAAwB,EAAEC,wBAJjD;IAKuB,iBAAiB,EAAEX;EAL1C;IAAA;IAAA;IAAA;EAAA,QAAP;AAQH,CAhDD;;GAAMH,Y;;KAAAA,Y;;AAkDN,MAAMe,eAAe,GAAIC,KAAD,KAAqE;EACzFf,kBAAkB,EAAEe,KAAK,CAACC,cAAN,CAAqBC,YAArB,CAAkCjB,kBADmC;EAEzFC,kBAAkB,EAAEc,KAAK,CAACC,cAAN,CAAqBC,YAArB,CAAkChB,kBAFmC;EAGzFC,iBAAiB,EAAEa,KAAK,CAACC,cAAN,CAAqBC,YAArB,CAAkCf;AAHoC,CAArE,CAAxB;;AAMA,eAAeT,OAAO,CAClBD,OAAO,CAACsB,eAAD,EAAkB;EACrBX,gBAAgB,EAAEP,qBADG;EAErBQ,gBAAgB,EAAEP,qBAFG;EAGrBQ,yBAAyB,EAAEP;AAHN,CAAlB,CADW,CAAP,CAKPC,YALO,CAAf"},"metadata":{},"sourceType":"module"}