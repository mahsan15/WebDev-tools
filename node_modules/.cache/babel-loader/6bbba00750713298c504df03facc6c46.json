{"ast":null,"code":"import React,{useEffect}from\"react\";import{connect}from\"react-redux\";import{compose}from\"redux\";import{humanReadableDateToEpoch}from\"../../utils/calculators/epochConverter\";import DateTimeFormComponent from\"../../components/EpochConverter/Forms/DateTimeForm\";import{setDateTimeInputValue,setTimezoneInputValue,setDateToEpochResult}from\"../../actions/EpochConverter/dateTimeForm\";import{jsx as _jsx}from\"react/jsx-runtime\";var DateTimeForm=function DateTimeForm(_ref){var dateTimeInputValue=_ref.dateTimeInputValue,timezoneInputValue=_ref.timezoneInputValue,dateToEpochResult=_ref.dateToEpochResult,setDateTimeInput=_ref.setDateTimeInput,setTimezoneInput=_ref.setTimezoneInput,setDateToEpochResultValue=_ref.setDateToEpochResultValue;useEffect(function(){if(!dateTimeInputValue){setDateTimeInput(Date());}},[dateTimeInputValue,setDateTimeInput]);var onDateTimeChange=function onDateTimeChange(_ref2){var value=_ref2.target.value;setDateTimeInput(value?value.toString():null);if(value===null||value===undefined){setDateToEpochResultValue('');}else if(dateToEpochResult!==''){setDateToEpochResultValue(humanReadableDateToEpoch(value.toString(),timezoneInputValue));}};var onTimezoneChange=function onTimezoneChange(_ref3){var value=_ref3.target.value;setTimezoneInput(value);if(dateToEpochResult&&dateTimeInputValue){setDateToEpochResultValue(humanReadableDateToEpoch(dateTimeInputValue.toString(),value));}};var onDateToEpochButtonClick=function onDateToEpochButtonClick(){if(dateTimeInputValue){setDateToEpochResultValue(humanReadableDateToEpoch(dateTimeInputValue.toString(),timezoneInputValue));}else{setDateToEpochResultValue('');}};return/*#__PURE__*/_jsx(DateTimeFormComponent,{dateTimeInputValue:new Date(dateTimeInputValue),timezoneInputValue:timezoneInputValue,onDateTimeChange:onDateTimeChange,onTimezoneChange:onTimezoneChange,onDateToEpochButtonClick:onDateToEpochButtonClick,dateToEpochResult:dateToEpochResult});};var mapStateToProps=function mapStateToProps(state){return{dateTimeInputValue:state.epochConverter.dateTimeForm.dateTimeInputValue,timezoneInputValue:state.epochConverter.dateTimeForm.timezoneInputValue,dateToEpochResult:state.epochConverter.dateTimeForm.dateToEpochResult};};export default compose(connect(mapStateToProps,{setDateTimeInput:setDateTimeInputValue,setTimezoneInput:setTimezoneInputValue,setDateToEpochResultValue:setDateToEpochResult}))(DateTimeForm);","map":{"version":3,"names":["React","useEffect","connect","compose","humanReadableDateToEpoch","DateTimeFormComponent","setDateTimeInputValue","setTimezoneInputValue","setDateToEpochResult","DateTimeForm","dateTimeInputValue","timezoneInputValue","dateToEpochResult","setDateTimeInput","setTimezoneInput","setDateToEpochResultValue","Date","onDateTimeChange","value","target","toString","undefined","onTimezoneChange","onDateToEpochButtonClick","mapStateToProps","state","epochConverter","dateTimeForm"],"sources":["C:/Users/Ahsan/Desktop/react_Projects/webdev/web-developer-tools/src/containers/EpochConverter/DateTimeForm.tsx"],"sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {humanReadableDateToEpoch} from \"../../utils/calculators/epochConverter\";\r\nimport DateTimeFormComponent\r\n    from \"../../components/EpochConverter/Forms/DateTimeForm\"\r\nimport {\r\n    setDateTimeInputValue,\r\n    setTimezoneInputValue,\r\n    setDateToEpochResult\r\n} from \"../../actions/EpochConverter/dateTimeForm\"\r\nimport {\r\n    DateTimeFormContainerPropsInterface,\r\n    DateTimeFormState\r\n} from \"../../types/epochConverter\";\r\n\r\nconst DateTimeForm = ({\r\n                          dateTimeInputValue,\r\n                          timezoneInputValue,\r\n                          dateToEpochResult,\r\n                          setDateTimeInput,\r\n                          setTimezoneInput,\r\n                          setDateToEpochResultValue\r\n                      }: DateTimeFormContainerPropsInterface) => {\r\n\r\n    useEffect(() => {\r\n        if (!dateTimeInputValue) {\r\n            setDateTimeInput(Date());\r\n        }\r\n    }, [dateTimeInputValue, setDateTimeInput]);\r\n\r\n    const onDateTimeChange = ({target: {value}}: { target: { value: string } }) => {\r\n        setDateTimeInput(value ? value.toString() : null);\r\n\r\n        if (value === null || value === undefined) {\r\n            setDateToEpochResultValue('');\r\n        } else if (dateToEpochResult !== '') {\r\n            setDateToEpochResultValue(humanReadableDateToEpoch(value.toString(), timezoneInputValue));\r\n        }\r\n    }\r\n\r\n    const onTimezoneChange = ({target: {value}}: { target: { value: 'gmt' | 'local' } }) => {\r\n        setTimezoneInput(value);\r\n        if (dateToEpochResult && dateTimeInputValue) {\r\n            setDateToEpochResultValue(humanReadableDateToEpoch(dateTimeInputValue.toString(), value));\r\n        }\r\n    }\r\n\r\n    const onDateToEpochButtonClick = () => {\r\n        if (dateTimeInputValue) {\r\n            setDateToEpochResultValue(humanReadableDateToEpoch(dateTimeInputValue.toString(), timezoneInputValue));\r\n        } else {\r\n            setDateToEpochResultValue('');\r\n        }\r\n    }\r\n\r\n    return <DateTimeFormComponent dateTimeInputValue={new Date(dateTimeInputValue)}\r\n                                  timezoneInputValue={timezoneInputValue}\r\n                                  onDateTimeChange={onDateTimeChange}\r\n                                  onTimezoneChange={onTimezoneChange}\r\n                                  onDateToEpochButtonClick={onDateToEpochButtonClick}\r\n                                  dateToEpochResult={dateToEpochResult}\r\n    />\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: { epochConverter: { dateTimeForm: DateTimeFormState } }) => ({\r\n    dateTimeInputValue: state.epochConverter.dateTimeForm.dateTimeInputValue,\r\n    timezoneInputValue: state.epochConverter.dateTimeForm.timezoneInputValue,\r\n    dateToEpochResult: state.epochConverter.dateTimeForm.dateToEpochResult,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setDateTimeInput: setDateTimeInputValue,\r\n        setTimezoneInput: setTimezoneInputValue,\r\n        setDateToEpochResultValue: setDateToEpochResult,\r\n    }))(DateTimeForm);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}