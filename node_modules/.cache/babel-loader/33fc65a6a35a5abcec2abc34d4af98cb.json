{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahsan\\\\Desktop\\\\react_Projects\\\\webdev\\\\web-developer-tools\\\\src\\\\containers\\\\CrontabGenerator\\\\GenerateCrontabLine.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { Toast } from 'primereact/toast';\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport GenerateCrontabLineComponent from '../../components/CrontabGenerator/GenerateCrontabLine';\nimport { setResult } from \"../../actions/CrontabGenerator/generateCrontabLine\";\nimport { getCronExpression, getFormState, getResult } from \"../../selectors/crontabGenerator\";\nimport { setMinuteHasError } from \"../../actions/CrontabGenerator/Schedule/minutes\";\nimport { setDayHasError } from \"../../actions/CrontabGenerator/Schedule/days\";\nimport { setHourHasError } from \"../../actions/CrontabGenerator/Schedule/hours\";\nimport { setMonthHasError } from \"../../actions/CrontabGenerator/Schedule/months\";\nimport { setWeekdayHasError } from \"../../actions/CrontabGenerator/Schedule/weekday\";\nimport { setCommandHasError } from \"../../actions/CrontabGenerator/commandToExecute\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GenerateCrontabLine = _ref => {\n  _s();\n\n  let {\n    formState,\n    result,\n    setResultValue,\n    setMinuteError,\n    setHourError,\n    setDayError,\n    setMonthError,\n    setWeekdayError,\n    setCommandError\n  } = _ref;\n  const toast = useRef(null);\n\n  const showError = message => {\n    toast.current.show({\n      severity: 'error',\n      summary: message\n    });\n  };\n\n  const onButtonClick = () => {\n    const expression = getCronExpression(formState);\n\n    switch (expression) {\n      case 'Invalid Minutes':\n        showError('Please choose at least one entry in minutes field.');\n        setMinuteError(true);\n        break;\n\n      case 'Invalid Hours':\n        showError('Please choose at least one entry in hours field.');\n        setHourError(true);\n        break;\n\n      case 'Invalid Days':\n        showError('Please choose at least one entry in days field.');\n        setDayError(true);\n        break;\n\n      case 'Invalid Months':\n        showError('Please choose at least one entry in months field.');\n        setMonthError(true);\n        break;\n\n      case 'Invalid Weekday':\n        showError('Please choose at least one entry in weekday field.');\n        setWeekdayError(true);\n        break;\n\n      case 'Invalid Command':\n        showError('Please enter a command.');\n        setCommandError(true);\n        break;\n\n      case 'Invalid Email':\n        showError('Please enter a valid Email address.');\n        break;\n\n      case 'Invalid Path':\n        showError('Please enter a file path for saving output.');\n        break;\n\n      default:\n        setResultValue(expression);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast,\n      position: \"top-center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GenerateCrontabLineComponent, {\n      result: result,\n      onClick: onButtonClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GenerateCrontabLine, \"gumfFKBGteX71MQIdj5N7yI9xVA=\");\n\n_c = GenerateCrontabLine;\n\nconst mapStateToProps = state => ({\n  formState: getFormState(state),\n  result: getResult(state)\n});\n\nexport default compose(connect(mapStateToProps, {\n  setMinuteError: setMinuteHasError,\n  setHourError: setHourHasError,\n  setDayError: setDayHasError,\n  setMonthError: setMonthHasError,\n  setWeekdayError: setWeekdayHasError,\n  setCommandError: setCommandHasError,\n  setResultValue: setResult\n}))(GenerateCrontabLine);\n\nvar _c;\n\n$RefreshReg$(_c, \"GenerateCrontabLine\");","map":{"version":3,"names":["React","useRef","Toast","compose","connect","GenerateCrontabLineComponent","setResult","getCronExpression","getFormState","getResult","setMinuteHasError","setDayHasError","setHourHasError","setMonthHasError","setWeekdayHasError","setCommandHasError","GenerateCrontabLine","formState","result","setResultValue","setMinuteError","setHourError","setDayError","setMonthError","setWeekdayError","setCommandError","toast","showError","message","current","show","severity","summary","onButtonClick","expression","mapStateToProps","state"],"sources":["C:/Users/Ahsan/Desktop/react_Projects/webdev/web-developer-tools/src/containers/CrontabGenerator/GenerateCrontabLine.tsx"],"sourcesContent":["import React, {useRef} from \"react\";\r\nimport {Toast} from 'primereact/toast';\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport GenerateCrontabLineComponent\r\n    from '../../components/CrontabGenerator/GenerateCrontabLine';\r\nimport {setResult} from \"../../actions/CrontabGenerator/generateCrontabLine\";\r\nimport {\r\n    getCronExpression,\r\n    getFormState,\r\n    getResult\r\n} from \"../../selectors/crontabGenerator\";\r\nimport {setMinuteHasError} from \"../../actions/CrontabGenerator/Schedule/minutes\";\r\nimport {setDayHasError} from \"../../actions/CrontabGenerator/Schedule/days\";\r\nimport {setHourHasError} from \"../../actions/CrontabGenerator/Schedule/hours\";\r\nimport {setMonthHasError} from \"../../actions/CrontabGenerator/Schedule/months\";\r\nimport {setWeekdayHasError} from \"../../actions/CrontabGenerator/Schedule/weekday\";\r\nimport {setCommandHasError} from \"../../actions/CrontabGenerator/commandToExecute\";\r\nimport {GenerateCrontabLineContainerState} from \"../../types/crontabGenerator\";\r\n\r\nconst GenerateCrontabLine = ({\r\n                                 formState,\r\n                                 result,\r\n                                 setResultValue,\r\n                                 setMinuteError,\r\n                                 setHourError,\r\n                                 setDayError,\r\n                                 setMonthError,\r\n                                 setWeekdayError,\r\n                                 setCommandError\r\n                             }: GenerateCrontabLineContainerState) => {\r\n\r\n    const toast: React.MutableRefObject<any> = useRef(null);\r\n\r\n    const showError = (message: string) => {\r\n        toast.current.show({severity: 'error', summary: message});\r\n    }\r\n\r\n    const onButtonClick = () => {\r\n\r\n        const expression: string = getCronExpression(formState);\r\n\r\n        switch (expression) {\r\n            case 'Invalid Minutes':\r\n                showError('Please choose at least one entry in minutes field.');\r\n                setMinuteError(true);\r\n                break;\r\n            case 'Invalid Hours':\r\n                showError('Please choose at least one entry in hours field.');\r\n                setHourError(true);\r\n                break;\r\n            case 'Invalid Days':\r\n                showError('Please choose at least one entry in days field.');\r\n                setDayError(true)\r\n                break;\r\n            case 'Invalid Months':\r\n                showError('Please choose at least one entry in months field.');\r\n                setMonthError(true);\r\n                break;\r\n            case 'Invalid Weekday':\r\n                showError('Please choose at least one entry in weekday field.');\r\n                setWeekdayError(true);\r\n                break;\r\n            case 'Invalid Command':\r\n                showError('Please enter a command.');\r\n                setCommandError(true);\r\n                break;\r\n            case 'Invalid Email':\r\n                showError('Please enter a valid Email address.');\r\n                break;\r\n            case 'Invalid Path':\r\n                showError('Please enter a file path for saving output.');\r\n                break;\r\n            default:\r\n                setResultValue(expression);\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <Toast ref={toast} position=\"top-center\"/>\r\n        <GenerateCrontabLineComponent result={result} onClick={onButtonClick}/>\r\n    </>\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    formState: getFormState(state),\r\n    result: getResult(state),\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setMinuteError: setMinuteHasError,\r\n        setHourError: setHourHasError,\r\n        setDayError: setDayHasError,\r\n        setMonthError: setMonthHasError,\r\n        setWeekdayError: setWeekdayHasError,\r\n        setCommandError: setCommandHasError,\r\n        setResultValue: setResult\r\n    })\r\n)(GenerateCrontabLine);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}