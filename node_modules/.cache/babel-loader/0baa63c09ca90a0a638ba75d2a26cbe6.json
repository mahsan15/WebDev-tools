{"ast":null,"code":"import { SET_PASSWORD, SET_PASSWORD_LENGTH, SET_CHECKED_PARAM, SET_COPY_TO_CLIPBOARD_STATE } from \"../../constants/ActionTypes\";\nconst initialState = {\n  checked: {\n    symbols: true,\n    numbers: true,\n    uppercase: true,\n    lowercase: true,\n    excludeSimilar: false\n  },\n  passwordLength: '16',\n  copyToClipboardButtonState: 'default',\n  result: ''\n};\n\nconst passwordGenerator = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_PASSWORD:\n      {\n        return { ...state,\n          result: action.payload\n        };\n      }\n\n    case SET_PASSWORD_LENGTH:\n      {\n        return { ...state,\n          passwordLength: action.payload\n        };\n      }\n\n    case SET_CHECKED_PARAM:\n      {\n        return { ...state,\n          checked: action.payload\n        };\n      }\n\n    case SET_COPY_TO_CLIPBOARD_STATE:\n      {\n        return { ...state,\n          copyToClipboardButtonState: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default passwordGenerator;","map":{"version":3,"names":["SET_PASSWORD","SET_PASSWORD_LENGTH","SET_CHECKED_PARAM","SET_COPY_TO_CLIPBOARD_STATE","initialState","checked","symbols","numbers","uppercase","lowercase","excludeSimilar","passwordLength","copyToClipboardButtonState","result","passwordGenerator","state","action","type","payload"],"sources":["C:/Users/Ahsan/Desktop/react_Projects/webdev/webdev/src/reducers/PasswordGenerator/index.ts"],"sourcesContent":["import {\r\n    SET_PASSWORD,\r\n    SET_PASSWORD_LENGTH,\r\n    SET_CHECKED_PARAM,\r\n    SET_COPY_TO_CLIPBOARD_STATE,\r\n} from \"../../constants/ActionTypes\";\r\nimport {\r\n    CheckboxesType,\r\n    PasswordGeneratorStateInterface\r\n} from \"../../types/passwordGenerator\";\r\n\r\nconst initialState: PasswordGeneratorStateInterface = {\r\n    checked: {\r\n        symbols: true,\r\n        numbers: true,\r\n        uppercase: true,\r\n        lowercase: true,\r\n        excludeSimilar: false,\r\n    },\r\n    passwordLength: '16',\r\n    copyToClipboardButtonState: 'default',\r\n    result: '',\r\n}\r\n\r\nconst passwordGenerator = (state = initialState, action: { type: string; payload: CheckboxesType | string }) => {\r\n\r\n    switch (action.type) {\r\n        case SET_PASSWORD: {\r\n            return {\r\n                ...state, result: action.payload\r\n            };\r\n        }\r\n        case SET_PASSWORD_LENGTH: {\r\n            return {\r\n                ...state, passwordLength: action.payload\r\n            };\r\n        }\r\n        case SET_CHECKED_PARAM: {\r\n            return {\r\n                ...state, checked: action.payload\r\n            };\r\n        }\r\n        case SET_COPY_TO_CLIPBOARD_STATE: {\r\n            return {\r\n                ...state, copyToClipboardButtonState: action.payload\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default passwordGenerator;\r\n"],"mappings":"AAAA,SACIA,YADJ,EAEIC,mBAFJ,EAGIC,iBAHJ,EAIIC,2BAJJ,QAKO,6BALP;AAWA,MAAMC,YAA6C,GAAG;EAClDC,OAAO,EAAE;IACLC,OAAO,EAAE,IADJ;IAELC,OAAO,EAAE,IAFJ;IAGLC,SAAS,EAAE,IAHN;IAILC,SAAS,EAAE,IAJN;IAKLC,cAAc,EAAE;EALX,CADyC;EAQlDC,cAAc,EAAE,IARkC;EASlDC,0BAA0B,EAAE,SATsB;EAUlDC,MAAM,EAAE;AAV0C,CAAtD;;AAaA,MAAMC,iBAAiB,GAAG,YAAsF;EAAA,IAArFC,KAAqF,uEAA7EX,YAA6E;EAAA,IAA/DY,MAA+D;;EAE5G,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKjB,YAAL;MAAmB;QACf,OAAO,EACH,GAAGe,KADA;UACOF,MAAM,EAAEG,MAAM,CAACE;QADtB,CAAP;MAGH;;IACD,KAAKjB,mBAAL;MAA0B;QACtB,OAAO,EACH,GAAGc,KADA;UACOJ,cAAc,EAAEK,MAAM,CAACE;QAD9B,CAAP;MAGH;;IACD,KAAKhB,iBAAL;MAAwB;QACpB,OAAO,EACH,GAAGa,KADA;UACOV,OAAO,EAAEW,MAAM,CAACE;QADvB,CAAP;MAGH;;IACD,KAAKf,2BAAL;MAAkC;QAC9B,OAAO,EACH,GAAGY,KADA;UACOH,0BAA0B,EAAEI,MAAM,CAACE;QAD1C,CAAP;MAGH;;IACD;MACI,OAAOH,KAAP;EAtBR;AAwBH,CA1BD;;AA4BA,eAAeD,iBAAf"},"metadata":{},"sourceType":"module"}